; ModuleID = 'arrayAverage'
source_filename = "arrayAverage"

@I = common global i32 0
@NUM = common global i32 0
@SUM = common global i32 0
@TEMP = common global i32 0
@X = common global [41 x i32] zeroinitializer

declare i32 @writeln(i32)

declare i32 @write_str(i8*)

declare i32 @readln(i32*)

define i32 @main() {
entry:
  store i32 -20, i32* @I, align 4
  br label %body

body:                                             ; preds = %inc, %entry
  %load_global = load i32, i32* @I, align 4
  %arr_start = sub i32 %load_global, -20
  %elem_ptr = getelementptr [41 x i32], [41 x i32]* @X, i32 0, i32 %arr_start
  store i32 0, i32* %elem_ptr, align 4
  %iter_value = load i32, i32* @I, align 4
  %stop_cond = icmp eq i32 %iter_value, 20
  br i1 %stop_cond, label %after, label %inc

inc:                                              ; preds = %body
  %iter_value1 = load i32, i32* @I, align 4
  %step = add i32 %iter_value1, 1
  store i32 %step, i32* @I, align 4
  br label %body

after:                                            ; preds = %body
  %call_tmp = call i32 @readln(i32* @NUM)
  store i32 0, i32* @I, align 4
  br label %body2

body2:                                            ; preds = %inc3, %after
  %call_tmp5 = call i32 @readln(i32* @TEMP)
  %load_global6 = load i32, i32* @TEMP, align 4
  %arr_start7 = sub i32 %load_global6, -20
  %elem_ptr8 = getelementptr [41 x i32], [41 x i32]* @X, i32 0, i32 %arr_start7
  %load_global9 = load i32, i32* @TEMP, align 4
  %load_global10 = load i32, i32* @TEMP, align 4
  %arr_start11 = sub i32 %load_global10, -20
  %elem_ptr12 = getelementptr [41 x i32], [41 x i32]* @X, i32 0, i32 %arr_start11
  %dereference = load i32, i32* %elem_ptr12, align 4
  %add_tmp = add i32 %dereference, 1
  store i32 %add_tmp, i32* %elem_ptr8, align 4
  %iter_value13 = load i32, i32* @I, align 4
  %load_global14 = load i32, i32* @NUM, align 4
  %sub_tmp = sub i32 %load_global14, 1
  %stop_cond15 = icmp eq i32 %iter_value13, %sub_tmp
  br i1 %stop_cond15, label %after4, label %inc3

inc3:                                             ; preds = %body2
  %iter_value16 = load i32, i32* @I, align 4
  %step17 = add i32 %iter_value16, 1
  store i32 %step17, i32* @I, align 4
  br label %body2

after4:                                           ; preds = %body2
  store i32 0, i32* @SUM, align 4
  store i32 20, i32* @I, align 4
  br label %body18

body18:                                           ; preds = %inc19, %after4
  %load_global21 = load i32, i32* @SUM, align 4
  %load_global22 = load i32, i32* @I, align 4
  %load_global23 = load i32, i32* @I, align 4
  %load_global24 = load i32, i32* @I, align 4
  %arr_start25 = sub i32 %load_global24, -20
  %elem_ptr26 = getelementptr [41 x i32], [41 x i32]* @X, i32 0, i32 %arr_start25
  %dereference27 = load i32, i32* %elem_ptr26, align 4
  %mul_tmp = mul i32 %load_global22, %dereference27
  %add_tmp28 = add i32 %load_global21, %mul_tmp
  store i32 %add_tmp28, i32* @SUM, align 4
  %iter_value29 = load i32, i32* @I, align 4
  %stop_cond30 = icmp eq i32 %iter_value29, -20
  br i1 %stop_cond30, label %after20, label %inc19

inc19:                                            ; preds = %body18
  %iter_value31 = load i32, i32* @I, align 4
  %step32 = add i32 %iter_value31, -1
  store i32 %step32, i32* @I, align 4
  br label %body18

after20:                                          ; preds = %body18
  %load_global33 = load i32, i32* @SUM, align 4
  %load_global34 = load i32, i32* @NUM, align 4
  %div_tmp = sdiv exact i32 %load_global33, %load_global34
  %call_tmp35 = call i32 @writeln(i32 %div_tmp)
  ret i32 0
}
