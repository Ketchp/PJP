; ModuleID = 'expressions2'
source_filename = "expressions2"

@a = common global i32 0
@b = common global i32 0
@c = common global i32 0
@d = common global i32 0
@x = common global i32 0
@y = common global i32 0

declare i32 @writeln(i32)

declare i32 @readln(i32*)

define i32 @main() {
entry:
  %call_tmp = call i32 @readln(i32* @x)
  %call_tmp1 = call i32 @readln(i32* @y)
  %load_global = load i32, i32* @x, align 4
  %load_global2 = load i32, i32* @y, align 4
  %add_tmp = add i32 %load_global, %load_global2
  store i32 %add_tmp, i32* @a, align 4
  %load_global3 = load i32, i32* @y, align 4
  %load_global4 = load i32, i32* @x, align 4
  %sub_tmp = sub i32 %load_global3, %load_global4
  store i32 %sub_tmp, i32* @b, align 4
  %load_global5 = load i32, i32* @x, align 4
  %call_tmp6 = call i32 @writeln(i32 %load_global5)
  %load_global7 = load i32, i32* @y, align 4
  %call_tmp8 = call i32 @writeln(i32 %load_global7)
  %load_global9 = load i32, i32* @a, align 4
  %call_tmp10 = call i32 @writeln(i32 %load_global9)
  %load_global11 = load i32, i32* @b, align 4
  %call_tmp12 = call i32 @writeln(i32 %load_global11)
  %load_global13 = load i32, i32* @x, align 4
  %load_global14 = load i32, i32* @a, align 4
  %add_tmp15 = add i32 %load_global13, %load_global14
  %load_global16 = load i32, i32* @y, align 4
  %load_global17 = load i32, i32* @b, align 4
  %sub_tmp18 = sub i32 %load_global16, %load_global17
  %mul_tmp = mul i32 %add_tmp15, %sub_tmp18
  store i32 %mul_tmp, i32* @c, align 4
  %load_global19 = load i32, i32* @c, align 4
  %call_tmp20 = call i32 @writeln(i32 %load_global19)
  %load_global21 = load i32, i32* @a, align 4
  %load_global22 = load i32, i32* @b, align 4
  %rem_tmp = srem i32 %load_global21, %load_global22
  store i32 %rem_tmp, i32* @d, align 4
  %load_global23 = load i32, i32* @d, align 4
  %call_tmp24 = call i32 @writeln(i32 %load_global23)
  ret i32 0
}
