; ModuleID = 'breakContinue'
source_filename = "breakContinue"

@I = common global i32 0
@str_literal = private constant [16 x i8] c"For loop break\0A\00"
@str_literal.1 = private constant [19 x i8] c"For loop continue\0A\00"
@str_literal.2 = private constant [18 x i8] c"While loop break\0A\00"
@str_literal.3 = private constant [21 x i8] c"While loop continue\0A\00"
@str_literal.4 = private constant [23 x i8] c"Nested break/continue\0A\00"

declare i32 @writeln(i32)

declare i32 @write_str(i8*)

declare i32 @readln(i32*)

define i32 @main() {
entry:
  %call_tmp = call i32 @write_str(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @str_literal, i32 0, i32 0))
  store i32 0, i32* @I, align 4
  br label %body

body:                                             ; preds = %inc, %entry
  %load_global = load i32, i32* @I, align 4
  %call_tmp1 = call i32 @writeln(i32 %load_global)
  %load_global2 = load i32, i32* @I, align 4
  %eq_tmp = icmp eq i32 %load_global2, 1
  %if_cond = icmp ne i1 %eq_tmp, false
  br i1 %if_cond, label %body3, label %else

stop:                                             ; preds = %after4
  %iter_value = load i32, i32* @I, align 4
  %stop_cond = icmp eq i32 %iter_value, 3
  br i1 %stop_cond, label %after, label %inc

inc:                                              ; preds = %stop
  %iter_value5 = load i32, i32* @I, align 4
  %step = add i32 %iter_value5, 1
  store i32 %step, i32* @I, align 4
  br label %body

after:                                            ; preds = %stop, %body3
  %load_global6 = load i32, i32* @I, align 4
  %call_tmp7 = call i32 @writeln(i32 %load_global6)
  %call_tmp8 = call i32 @write_str(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str_literal.1, i32 0, i32 0))
  store i32 0, i32* @I, align 4
  br label %body9

body3:                                            ; preds = %body
  br label %after

else:                                             ; preds = %body
  br label %after4

after4:                                           ; preds = %else, %after_break
  br label %stop

after_break:                                      ; No predecessors!
  unreachable
  br label %after4

body9:                                            ; preds = %inc11, %after
  %load_global13 = load i32, i32* @I, align 4
  %call_tmp14 = call i32 @writeln(i32 %load_global13)
  %load_global15 = load i32, i32* @I, align 4
  %eq_tmp16 = icmp eq i32 %load_global15, 1
  %if_cond17 = icmp ne i1 %eq_tmp16, false
  br i1 %if_cond17, label %body18, label %else19

stop10:                                           ; preds = %after20, %body18
  %iter_value23 = load i32, i32* @I, align 4
  %stop_cond24 = icmp eq i32 %iter_value23, 3
  br i1 %stop_cond24, label %after12, label %inc11

inc11:                                            ; preds = %stop10
  %iter_value25 = load i32, i32* @I, align 4
  %step26 = add i32 %iter_value25, 1
  store i32 %step26, i32* @I, align 4
  br label %body9

after12:                                          ; preds = %stop10
  %load_global27 = load i32, i32* @I, align 4
  %call_tmp28 = call i32 @writeln(i32 %load_global27)
  %call_tmp29 = call i32 @write_str(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @str_literal.2, i32 0, i32 0))
  store i32 0, i32* @I, align 4
  br label %cond

body18:                                           ; preds = %body9
  br label %stop10

else19:                                           ; preds = %body9
  br label %after20

after20:                                          ; preds = %else19, %after_continue
  %load_global21 = load i32, i32* @I, align 4
  %call_tmp22 = call i32 @writeln(i32 %load_global21)
  br label %stop10

after_continue:                                   ; No predecessors!
  unreachable
  br label %after20

cond:                                             ; preds = %after41, %after12
  %load_global32 = load i32, i32* @I, align 4
  %lt_tmp = icmp slt i32 %load_global32, 5
  %if_cond33 = icmp ne i1 %lt_tmp, false
  br i1 %if_cond33, label %body30, label %after31

body30:                                           ; preds = %cond
  %load_global34 = load i32, i32* @I, align 4
  %call_tmp35 = call i32 @writeln(i32 %load_global34)
  %load_global36 = load i32, i32* @I, align 4
  %eq_tmp37 = icmp eq i32 %load_global36, 1
  %if_cond38 = icmp ne i1 %eq_tmp37, false
  br i1 %if_cond38, label %body39, label %else40

after31:                                          ; preds = %body39, %cond
  %load_global44 = load i32, i32* @I, align 4
  %call_tmp45 = call i32 @writeln(i32 %load_global44)
  %call_tmp46 = call i32 @write_str(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str_literal.3, i32 0, i32 0))
  store i32 0, i32* @I, align 4
  br label %cond47

body39:                                           ; preds = %body30
  br label %after31

else40:                                           ; preds = %body30
  br label %after41

after41:                                          ; preds = %else40, %after_break42
  %load_global43 = load i32, i32* @I, align 4
  %add_tmp = add i32 %load_global43, 1
  store i32 %add_tmp, i32* @I, align 4
  br label %cond

after_break42:                                    ; No predecessors!
  unreachable
  br label %after41

cond47:                                           ; preds = %after62, %body60, %after31
  %load_global50 = load i32, i32* @I, align 4
  %lt_tmp51 = icmp slt i32 %load_global50, 5
  %if_cond52 = icmp ne i1 %lt_tmp51, false
  br i1 %if_cond52, label %body48, label %after49

body48:                                           ; preds = %cond47
  %load_global53 = load i32, i32* @I, align 4
  %call_tmp54 = call i32 @writeln(i32 %load_global53)
  %load_global55 = load i32, i32* @I, align 4
  %add_tmp56 = add i32 %load_global55, 1
  store i32 %add_tmp56, i32* @I, align 4
  %load_global57 = load i32, i32* @I, align 4
  %eq_tmp58 = icmp eq i32 %load_global57, 2
  %if_cond59 = icmp ne i1 %eq_tmp58, false
  br i1 %if_cond59, label %body60, label %else61

after49:                                          ; preds = %cond47
  %load_global66 = load i32, i32* @I, align 4
  %call_tmp67 = call i32 @writeln(i32 %load_global66)
  %call_tmp68 = call i32 @write_str(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @str_literal.4, i32 0, i32 0))
  store i32 1561, i32* @I, align 4
  %load_global69 = load i32, i32* @I, align 4
  %call_tmp70 = call i32 @writeln(i32 %load_global69)
  br label %cond71

body60:                                           ; preds = %body48
  br label %cond47

else61:                                           ; preds = %body48
  br label %after62

after62:                                          ; preds = %else61, %after_continue63
  %load_global64 = load i32, i32* @I, align 4
  %call_tmp65 = call i32 @writeln(i32 %load_global64)
  br label %cond47

after_continue63:                                 ; No predecessors!
  unreachable
  br label %after62

cond71:                                           ; preds = %after93, %after49
  br i1 true, label %body72, label %after73

body72:                                           ; preds = %cond71
  br label %cond74

after73:                                          ; preds = %body91, %cond71
  ret i32 0

cond74:                                           ; preds = %after_continue87, %after82, %body72
  br i1 true, label %body75, label %after76

body75:                                           ; preds = %cond74
  %load_global77 = load i32, i32* @I, align 4
  %rem_tmp = srem i32 %load_global77, 2
  %eq_tmp78 = icmp eq i32 %rem_tmp, 1
  %if_cond79 = icmp ne i1 %eq_tmp78, false
  br i1 %if_cond79, label %body80, label %else81

after76:                                          ; preds = %body80, %cond74
  %load_global88 = load i32, i32* @I, align 4
  %eq_tmp89 = icmp eq i32 %load_global88, 1
  %if_cond90 = icmp ne i1 %eq_tmp89, false
  br i1 %if_cond90, label %body91, label %else92

body80:                                           ; preds = %body75
  br label %after76

else81:                                           ; preds = %body75
  br label %after82

after82:                                          ; preds = %else81, %after_break83
  %load_global84 = load i32, i32* @I, align 4
  %div_tmp = sdiv exact i32 %load_global84, 2
  store i32 %div_tmp, i32* @I, align 4
  %load_global85 = load i32, i32* @I, align 4
  %call_tmp86 = call i32 @writeln(i32 %load_global85)
  br label %cond74

after_break83:                                    ; No predecessors!
  unreachable
  br label %after82

after_continue87:                                 ; No predecessors!
  unreachable
  br label %cond74

body91:                                           ; preds = %after76
  br label %after73

else92:                                           ; preds = %after76
  br label %after93

after93:                                          ; preds = %else92, %after_break94
  %load_global95 = load i32, i32* @I, align 4
  %mul_tmp = mul i32 3, %load_global95
  %add_tmp96 = add i32 %mul_tmp, 1
  store i32 %add_tmp96, i32* @I, align 4
  %load_global97 = load i32, i32* @I, align 4
  %call_tmp98 = call i32 @writeln(i32 %load_global97)
  br label %cond71

after_break94:                                    ; No predecessors!
  unreachable
  br label %after93
}
